@model PagedList.IPagedList<ContosoUniversity.Models.Student>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Students";
}

<h2>Students</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "Student", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            First Name
        </th>
        <th>
            @Html.ActionLink("Enrollment Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>
    @Html.CheckBox("HaveYouApplied", htmlAttributes: new { id = "chkYes", onchange = "chkYes", @checked="true" , @class = "big-checkbox" })
    @Html.Label("Yes")
    <br />
    @Html.CheckBox("HaveYouApplied", htmlAttributes: new { id = "chkNo", onchange = "chkNo", @class = "big-checkbox" })
    @Html.Label("No")

    @section scripts{
    <script type="text/javascript">
    $(function () {
        $("#chkYes").change(function () {
            var ischecked = $(this).is(":checked");
            if (ischecked) {
                $("#chkNo").prop("checked",false);
            }
        });

        $("#chkNo").change(function () {
            var ischecked = $(this).is(":checked");
            if (ischecked) {
                $("#chkYes").prop("checked", false);
            }
        });
    })
    </script>
        
        }

    @foreach (var item in Model)
    {

       


        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstMidName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))